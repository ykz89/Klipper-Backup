[include Voron2_M8P-v2.0_config.cfg]
[include mainsail.cfg]
[include the_filter.cfg]
[include rgb.cfg]

[virtual_sdcard]
path: /home/ykz/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

#####################################################################
#       EBB Can
#####################################################################

[mcu EBBCan]
canbus_uuid: 4fad355dcf40

[extruder]
step_pin: EBBCan:gpio18
dir_pin: !EBBCan:gpio19
enable_pin: !EBBCan:gpio17
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan:gpio7
sensor_type: Generic 3950
sensor_pin: EBBCan:gpio27
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 270

# sensor_type: MAX31865
# sensor_pin: EBBCan:gpio9
# spi_software_sclk_pin: EBBCan:gpio10
# spi_software_mosi_pin: EBBCan:gpio8
# spi_software_miso_pin: EBBCan:gpio11
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan:gpio20
run_current: 0.650
stealthchop_threshold: 999999

[fan]
pin: EBBCan:gpio13

[heater_fan hotend_fan]
pin: EBBCan:gpio14
heater: extruder
heater_temp: 50.0

#####################################################################
#       Scanner
#####################################################################

# [mcu scanner]
# canbus_uuid: d2a3e700d7c0 
# #serial: /dev/serial/by-id/usb-cartographer_cartographer_
# #    adjust to suit your scanner, if using usb change to serial

# [scanner]
# mcu: scanner            
# #   Offsets are measured from the centre of your coil, to the tip of your nozzle 
# #   on a level axis. It is vital that this is accurate. 
# x_offset: 0                          
# #    adjust for your cartographers offset from nozzle to middle of coil
# y_offset: 22                         
# #    adjust for your cartographers offset from nozzle to middle of coil
# backlash_comp: 1.99023
# #   Backlash compensation distance for removing Z backlash before measuring
# #   the sensor response.
# sensor: cartographer
# #    this must be set as cartographer unless using IDM etc.
# sensor_alt: carto
# #    alternate name to call commands. CARTO_TOUCH etc      
# mesh_runs: 2
# #    Number of passes to make during mesh scan.

# [bed_mesh]
# zero_reference_position: 150, 150    
# #    set this to the middle of your bed
# speed: 300
# #    movement speed of toolhead during bed mesh
# horizontal_move_z: 5
# #    height of scanner during bed mesh scan
# mesh_min: 40, 24.4
# #    start point of bed mesh [X, Y]
# mesh_max: 260, 250
# #    end point of bed mesh [X, Y]
# probe_count: 7, 7
# algorithm: bicubic

# [temperature_sensor Cartographer_MCU]
# sensor_type: temperature_mcu
# sensor_mcu: scanner
# min_temp: 0
# max_temp: 105

# [adxl345]
# cs_pin: scanner:PA3
# spi_bus: spi1

# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#    125, 125, 20

#####################################################################
#       Shaketune
#####################################################################

# [shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
# number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.004456, 0.073990, 0.019561, 0.006468, 0.004579, 0.070327, 0.012637
#*# 	0.017325, 0.074228, 0.004757, 0.009822, 0.000751, 0.072302, 0.023482
#*# 	0.003446, 0.051732, -0.024790, -0.007791, -0.005885, 0.061615, -0.000076
#*# 	0.005674, 0.047264, -0.021782, 0.002994, -0.006794, 0.055130, -0.013041
#*# 	0.012738, 0.056938, -0.014293, 0.004847, -0.011133, 0.050915, -0.002386
#*# 	0.016763, 0.070444, -0.004046, 0.000824, -0.007835, 0.055296, 0.005590
#*# 	0.026402, 0.079456, 0.009297, 0.013436, 0.011074, 0.064490, 0.017521
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 260.0
#*# min_y = 24.4
#*# max_y = 250.0
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 39.013
#*# pid_ki = 1.445
#*# pid_kd = 263.336
